import unittest
import  puzzle_env

class TestTetris(unittest.TestCase):
    
    def test_get_height(self):
        env = puzzle_env.PuzzleEnv()
        env.board.__set_field__(([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],
                                   [1, 0, 0, 0, 0, 0, 1, 1, 1, 0],
                                   [1, 1, 0, 1, 0, 0, 0, 0, 0, 1],
                                   [1, 1, 1, 1, 0, 0, 0, 0, 0, 0]]))
        assert(env.board.__get_column_height__(0) == 3)
        assert(env.board.__get_column_height__(4) == 4)



if __name__ == '__main__':
    unittest.main()